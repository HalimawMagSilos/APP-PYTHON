user  nginx;
worker_processes auto;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    sendfile      on;
    keepalive_timeout 65;

    server {
        listen 80;
        server_name localhost;

        location /afrs-microservice/ {
            # Handle CORS preflight directly in Nginx (donâ€™t forward OPTIONS)
            if ($request_method = OPTIONS) {
                add_header 'Access-Control-Allow-Origin' 'http://localhost:5173' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, x-api-key' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }

            # Proxy everything else
            proxy_pass http://afrs-microservice:8000/;
            rewrite ^/afrs-microservice/(.*)$ /$1 break;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Normal responses should also include CORS headers
            add_header 'Access-Control-Allow-Origin' 'http://localhost:5173' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, x-api-key' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }
    }
}
